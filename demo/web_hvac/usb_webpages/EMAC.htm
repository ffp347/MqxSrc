

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN">



<html>
<head>
<title>Freescale MQX Webserver</title>
<style type="text/css">
<!--
@import"mqx.css";
-->

</style>

<script src="request.js" type="text/javascript"></script>

<script type="text/javascript">
if (window.attachEvent) {
	window.attachEvent("onload", sfHover2);
}
</script>

</head>
<body>


<a href="http://www.freescale.com" title="Freescale"><img src="header.gif" alt="Freescale Semiconductor" width="990" height="50" border="0"/></a><BR>
<div id="lfnvcl">
<ul id="lnv">
<li><a href="../mqx.html" class="pt">Webserver Home</a></li>
<li><a href="index.htm" class="pt">ColdFire® MCF5225x</a></li>
<li><a href="core_int.htm">&nbsp;&nbsp;ColdFire Core</a></li>
<li><a href="memory.htm" >&nbsp;&nbsp;Flash and SRAM</a></li>
<li><a href="eth_int.htm">&nbsp;&nbsp;FEC</a></li>
<li><a href="USB.htm">&nbsp;&nbsp;USB</a></li>
<li><a href="CAU.htm">&nbsp;&nbsp;CAU</a></li>
<li><a href="can_intr.htm">&nbsp;&nbsp;CAN</a></li>
<li><a href="minibus.htm">&nbsp;&nbsp;Mini-FlexBus</a></li>
<li><a href="EMAC.htm">&nbsp;&nbsp;EMAC</a></li>
<li><a href="sys_int.htm">&nbsp;&nbsp;System Integration</a></li>
<li><a href="debug.htm">&nbsp;&nbsp;Debug</a></li>
<li><a href="RTC_int.htm">&nbsp;&nbsp;RTC</a></li>
<li><a href="GPIO.htm">&nbsp;&nbsp;GPIO</a></li>
<li><a href="PLL.htm">&nbsp;&nbsp;PLL</a></li>
<li><a href="DTIMER.htm">&nbsp;&nbsp;DTimer</a></li>
<li><a href="I2C.htm">&nbsp;&nbsp;I2C</a></li>
<li><a href="UART_int.htm">&nbsp;&nbsp;UART</a></li>
<li><a href="GPT_int.htm">&nbsp;&nbsp;GPT</a></li>
<li><a href="QSPI.htm">&nbsp;&nbsp;QSPI</a></li>
<li><a href="RTC_int.htm">&nbsp;&nbsp;RTC</a></li>
<li><a href="ADC_int.htm">&nbsp;&nbsp;ADC</a></li>
<li><a href="pit_int.htm">&nbsp;&nbsp;PIT</a></li>
<li><a href="pwm_int.htm">&nbsp;&nbsp;PWM</a></li>
<li><a href="DMA_int.htm">&nbsp;&nbsp;DMA</a></li>
<li><a href="ezp_int.htm">&nbsp;&nbsp;EZPORT</a></li>
</ul>
</div>

 <div id="mncnt" class="cframe">
	<div class="breadcrumbs"><a href="index.htm">ColdFire&reg; MCF5225x </a>Enhanced Multiply-Accumulate Unit (EMAC)</div>

  
<div class="lcn" >
      <div class="padMe5"></div>
       <div class="hrw"><hr /></div>
   <h1>Enhanced Multiply-Accumulate Unit (EMAC)</h1>

 <div class="hrw"><hr /></div>
  
  <p align="left"><font face="Arial">The EMAC design provides a set of DSP 
operations that can improve the performance of embedded code
while supporting the integer multiply instructions of the baseline ColdFire 
architecture.</font></p>
  <p align="left"><font face="Arial">    The MAC provides functionality in three related areas:</font></p>
  <ol>
    <li><font face="Arial" align="left"> Signed and unsigned integer multiplication</font></li>
    <li><font face="Arial" align="left"> Multiply-accumulate operations supporting signed and unsigned integer 
      operands as well as
      signed, fixed-point, and fractional operands</font></li>
    <li><font face="Arial" align="left">Miscellaneous register operations</font></li>
  </ol>
  <p align="left"><font face="Arial">The ColdFire family supports two MAC implementations with different performance 
    levels and
    capabilities. The original MAC features a three-stage execution pipeline 
    optimized for 16-bit operands,
    with a 16x16 multiply array and a single 32-bit accumulator. The EMAC features a 
    four-stage pipeline
    optimized for 32-bit operands, with a fully pipelined 32 &times; 32 multiply array and 
    four 48-bit accumulators.</font></p>
</div>
 </div>
<div id="ftr">
<div id=copyright>
<center>&copy; Freescale Semiconductor, Inc. 2004 - 2008. All Rights Reserved </center>
</div>
</div>

</body>
</html>